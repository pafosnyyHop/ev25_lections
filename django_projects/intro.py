# 1. создать виртуальное окружение 
#     python3 -m venv venv

# 2. установка библиотек и джанго
#     1)pip install <library>
#     pip freeze > req.txt
#     2) запись названий в req.txt
#     pip install -r req.txt

# 3. создание проекта и файла manege.py
#     django-admin startproject <name> .

# 4. создать приложение для проекта
#   python3 manage.py startapp <name>
#   django-admin startapp <name>

# 5. добавить приложение в настройки проекта, в настройку installed_apps(подключение приложения в ваш проект)

# 6. Настройка БД 
#   DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': <'name'>,
    #     'USER': '<user>',
    #     'PASSWORD': '<1>',
    #     'HOST': 'localhost',
    #     'PORT': 5432
    # }
# }
# 7. создали БД в postgres

# 8. работа с миграциями 
#   8.1 Создание файлов миграции
        # python3 manage.py makemigrations
#   8.2 Запускаем файлы миграции(щтправить изменения в бд)
#       python3 manage.py migrate

# 9. Запуск сервера
#   # python3 manage.py runserver
# 10. coздание суперюзера
#   python3 manage.py createsuperuser 
# 

# -----------------------------------------------------------------
# rest - это протокол со сводом правил
# MVC - Model View Controler
# modles.py -> отвечает за связь с БД Каждый класс это таблица с определенными полями 
# Модуль который вносит изменения в БД - psycopg2-binary    
# ./ manage.py makemigrations -> подготавливает файл запрос для БД
# ./ manage.py migrate -> применяет команды в БД
# urls.py -> маршрутизатор 
# Клиент кидает запрос - запрос проходит проверки - запрос попадает в файл urls.py -> cреди путей которые прописаны в urlpatterns находится совпадающая ссылка -- вызывается функция-обработчика

# views.py файл с функциями обработчиками которые отвечают за получекние или модицикацию данных 

# в завимости от вида запроса (get -> 
# 1 идает запрос в базу данных и получает querySet(данные которые получают из базы данных ))
# 2 использует сериализатор  чтобы конвертировать данные в нудный формат 
# 3 возвращяет данные фронту) 
# 
